{"ast":null,"code":"var _jsxFileName = \"/home/ashok/student-mis-system/src/components/JobRoleSelector.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobRoleSelector = ({\n  onSelect\n}) => {\n  // Predefined list of job roles\n  const jobRoles = [{\n    value: 'software_engineer',\n    label: 'Software Engineer'\n  }, {\n    value: 'data_analyst',\n    label: 'Data Analyst'\n  }, {\n    value: 'data_scientist',\n    label: 'Data Scientist'\n  }, {\n    value: 'business_analyst',\n    label: 'Business Analyst'\n  }, {\n    value: 'product_manager',\n    label: 'Product Manager'\n  }, {\n    value: 'ux_designer',\n    label: 'UX Designer'\n  }, {\n    value: 'frontend_developer',\n    label: 'Frontend Developer'\n  }, {\n    value: 'backend_developer',\n    label: 'Backend Developer'\n  }, {\n    value: 'fullstack_developer',\n    label: 'Full Stack Developer'\n  }, {\n    value: 'devops_engineer',\n    label: 'DevOps Engineer'\n  }, {\n    value: 'cloud_architect',\n    label: 'Cloud Architect'\n  }, {\n    value: 'machine_learning_engineer',\n    label: 'Machine Learning Engineer'\n  }, {\n    value: 'ai_researcher',\n    label: 'AI Researcher'\n  }, {\n    value: 'cybersecurity_analyst',\n    label: 'Cybersecurity Analyst'\n  }, {\n    value: 'network_engineer',\n    label: 'Network Engineer'\n  }, {\n    value: 'database_administrator',\n    label: 'Database Administrator'\n  }, {\n    value: 'project_manager',\n    label: 'Project Manager'\n  }, {\n    value: 'qa_engineer',\n    label: 'QA Engineer'\n  }, {\n    value: 'technical_writer',\n    label: 'Technical Writer'\n  }, {\n    value: 'systems_analyst',\n    label: 'Systems Analyst'\n  }];\n  const handleChange = selectedOptions => {\n    onSelect(selectedOptions || []);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"jobRoleSelect\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select job roles you're interested in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        isMulti: true,\n        name: \"jobRoles\",\n        options: jobRoles,\n        className: \"basic-multi-select\",\n        classNamePrefix: \"select\",\n        placeholder: \"Select job roles...\",\n        onChange: handleChange,\n        \"aria-label\": \"Job Role Selector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"You can select multiple job roles to analyze your fit for each.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = JobRoleSelector;\nexport default JobRoleSelector;\nvar _c;\n$RefreshReg$(_c, \"JobRoleSelector\");","map":{"version":3,"names":["React","Select","Form","jsxDEV","_jsxDEV","JobRoleSelector","onSelect","jobRoles","value","label","handleChange","selectedOptions","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","isMulti","name","options","className","classNamePrefix","placeholder","onChange","Text","_c","$RefreshReg$"],"sources":["/home/ashok/student-mis-system/src/components/JobRoleSelector.js"],"sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport { Form } from 'react-bootstrap';\n\nconst JobRoleSelector = ({ onSelect }) => {\n  // Predefined list of job roles\n  const jobRoles = [\n    { value: 'software_engineer', label: 'Software Engineer' },\n    { value: 'data_analyst', label: 'Data Analyst' },\n    { value: 'data_scientist', label: 'Data Scientist' },\n    { value: 'business_analyst', label: 'Business Analyst' },\n    { value: 'product_manager', label: 'Product Manager' },\n    { value: 'ux_designer', label: 'UX Designer' },\n    { value: 'frontend_developer', label: 'Frontend Developer' },\n    { value: 'backend_developer', label: 'Backend Developer' },\n    { value: 'fullstack_developer', label: 'Full Stack Developer' },\n    { value: 'devops_engineer', label: 'DevOps Engineer' },\n    { value: 'cloud_architect', label: 'Cloud Architect' },\n    { value: 'machine_learning_engineer', label: 'Machine Learning Engineer' },\n    { value: 'ai_researcher', label: 'AI Researcher' },\n    { value: 'cybersecurity_analyst', label: 'Cybersecurity Analyst' },\n    { value: 'network_engineer', label: 'Network Engineer' },\n    { value: 'database_administrator', label: 'Database Administrator' },\n    { value: 'project_manager', label: 'Project Manager' },\n    { value: 'qa_engineer', label: 'QA Engineer' },\n    { value: 'technical_writer', label: 'Technical Writer' },\n    { value: 'systems_analyst', label: 'Systems Analyst' },\n  ];\n\n  const handleChange = (selectedOptions) => {\n    onSelect(selectedOptions || []);\n  };\n\n  return (\n    <div>\n      <Form.Group controlId=\"jobRoleSelect\">\n        <Form.Label>Select job roles you're interested in</Form.Label>\n        <Select\n          isMulti\n          name=\"jobRoles\"\n          options={jobRoles}\n          className=\"basic-multi-select\"\n          classNamePrefix=\"select\"\n          placeholder=\"Select job roles...\"\n          onChange={handleChange}\n          aria-label=\"Job Role Selector\"\n        />\n        <Form.Text className=\"text-muted\">\n          You can select multiple job roles to analyze your fit for each.\n        </Form.Text>\n      </Form.Group>\n    </div>\n  );\n};\n\nexport default JobRoleSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}