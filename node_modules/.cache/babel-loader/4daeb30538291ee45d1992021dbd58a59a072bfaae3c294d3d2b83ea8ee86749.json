{"ast":null,"code":"var _jsxFileName = \"/home/ashok/Mis-student-Verification-main/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Container, Row, Col, Card, Nav, Alert, Spinner } from 'react-bootstrap';\nimport CsvUploader from './components/CsvUploader';\nimport JobDescriptionUploader from './components/JobDescriptionUploader';\nimport ProcessingStatus from './components/ProcessingStatus';\n// Removed unused import: ResultsDisplay\nimport InterviewPrep from './components/InterviewPrep';\nimport GdPrep from './components/GdPrep';\n// Removed unused import: uploadFiles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [csvData, setCsvData] = useState(null);\n  const [jobDescFile, setJobDescFile] = useState(null);\n  // Using a default value for selectedRoles since we're not changing it\n  const [selectedRoles] = useState([]);\n  // Using a default value for analysisResults since we're not changing it\n  const [analysisResults] = useState(null);\n  const [activeTab, setActiveTab] = useState('main');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingError, setProcessingError] = useState(null);\n  const [processingData, setProcessingData] = useState(null);\n\n  // Listen for custom tab switch events\n  useEffect(() => {\n    const handleTabSwitch = event => {\n      if (event.detail && analysisResults) {\n        setActiveTab(event.detail);\n      }\n    };\n    window.addEventListener('switchTab', handleTabSwitch);\n\n    // Log the current hostname and port for debugging\n    console.log('App running at:', window.location.hostname, window.location.port);\n    return () => {\n      window.removeEventListener('switchTab', handleTabSwitch);\n    };\n  }, [analysisResults]);\n\n  // Simulate polling for processing status\n  useEffect(() => {\n    let timer;\n    if (processingData && processingData.status === 'processing' && csvData && csvData.data) {\n      timer = setInterval(() => {\n        // In a real application, this would call an API to get the current status\n        // For now, we'll simulate progress updates\n        setProcessingData(prev => {\n          if (!prev) return null;\n          const newProcessed = Math.min(prev.processedStudents + 1, prev.totalStudents);\n          const isCompleted = newProcessed === prev.totalStudents;\n          if (isCompleted) {\n            clearInterval(timer);\n\n            // Use actual student data from the CSV file\n            const results = csvData.data.map((student, i) => {\n              // Get student name from CSV or use a fallback\n              const name = student.Name || student.name || student[\"full name of the student\"] || student[\"Full Name\"] || student[\"Student Name\"] || `Unknown Student ${i + 1}`;\n\n              // Get student ID/Roll Number from CSV or generate one\n              const rollNumber = student.Roll_Number || student.RollNumber || student.ID || student.StudentID || `S${1000 + i}`;\n\n              // Simulate processing status and email sending\n              const status = Math.random() > 0.2 ? 'Success' : Math.random() > 0.5 ? 'Partial Success' : 'Failure';\n              const emailSent = Math.random() > 0.3;\n              return {\n                name,\n                rollNumber,\n                status,\n                emailSent\n              };\n            });\n            return {\n              ...prev,\n              status: 'completed',\n              processedStudents: newProcessed,\n              results\n            };\n          }\n          return {\n            ...prev,\n            processedStudents: newProcessed\n          };\n        });\n      }, 1000);\n    }\n    return () => {\n      if (timer) clearInterval(timer);\n    };\n  }, [processingData, csvData]);\n  const handleCsvUpload = data => {\n    setCsvData(data);\n  };\n  const handleJobDescUpload = file => {\n    setJobDescFile(file);\n  };\n  const handleProcessFiles = async () => {\n    if (!csvData || !jobDescFile) {\n      alert('Please upload both a CSV file and a job description file');\n      return;\n    }\n    setIsProcessing(true);\n    setProcessingError(null);\n    try {\n      // In a real application, this would call the backend API\n      // For now, we'll simulate a response\n\n      // Simulate API call\n      // const response = await uploadFiles(csvData, jobDescFile);\n\n      // Ensure we have valid data\n      const totalStudents = csvData.data && Array.isArray(csvData.data) ? csvData.data.length : 0;\n      if (totalStudents === 0) {\n        throw new Error('No student data found in the CSV file');\n      }\n      console.log('Processing', totalStudents, 'students');\n      setProcessingData({\n        status: 'processing',\n        totalStudents: totalStudents,\n        processedStudents: 0,\n        jobDescriptionLength: jobDescFile.size,\n        results: []\n      });\n    } catch (error) {\n      console.error('Error processing files:', error);\n      setProcessingError(error.message || 'Failed to process files. Please try again.');\n      setProcessingData(null);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"\\uD83C\\uDF93 Student MIS Verification + Document Generation System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        variant: \"tabs\",\n        className: \"mb-4\",\n        activeKey: activeTab,\n        onSelect: k => setActiveTab(k),\n        children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"main\",\n            children: \"File Processing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"interview\",\n            disabled: !analysisResults,\n            children: \"Interview Preparation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"gd\",\n            disabled: !analysisResults,\n            children: \"GD Preparation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), activeTab === 'main' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"h-100\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"Student Profiles CSV Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(CsvUploader, {\n                  onUpload: handleCsvUpload\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"h-100\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"Job Description Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(JobDescriptionUploader, {\n                  onUpload: handleJobDescUpload\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid gap-2 mt-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary btn-lg\",\n                    onClick: handleProcessFiles,\n                    disabled: !csvData || !jobDescFile || isProcessing,\n                    children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                        as: \"span\",\n                        animation: \"border\",\n                        size: \"sm\",\n                        role: \"status\",\n                        \"aria-hidden\": \"true\",\n                        className: \"me-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 29\n                      }, this), \"Processing...\"]\n                    }, void 0, true) : 'Process Files'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), processingError && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: \"Processing Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: processingError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), processingData && /*#__PURE__*/_jsxDEV(ProcessingStatus, {\n          processingData: processingData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true), activeTab === 'interview' && /*#__PURE__*/_jsxDEV(InterviewPrep, {\n        results: analysisResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 39\n      }, this), activeTab === 'gd' && /*#__PURE__*/_jsxDEV(GdPrep, {\n        results: analysisResults,\n        selectedRoles: selectedRoles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"T+zj+/mCZCJ0Jf1C3T3qUlQhpWk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Nav","Alert","Spinner","CsvUploader","JobDescriptionUploader","ProcessingStatus","InterviewPrep","GdPrep","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","csvData","setCsvData","jobDescFile","setJobDescFile","selectedRoles","analysisResults","activeTab","setActiveTab","isProcessing","setIsProcessing","processingError","setProcessingError","processingData","setProcessingData","handleTabSwitch","event","detail","window","addEventListener","console","log","location","hostname","port","removeEventListener","timer","status","data","setInterval","prev","newProcessed","Math","min","processedStudents","totalStudents","isCompleted","clearInterval","results","map","student","i","name","Name","rollNumber","Roll_Number","RollNumber","ID","StudentID","random","emailSent","handleCsvUpload","handleJobDescUpload","file","handleProcessFiles","alert","Array","isArray","length","Error","jobDescriptionLength","size","error","message","className","children","fluid","fileName","_jsxFileName","lineNumber","columnNumber","variant","activeKey","onSelect","k","Item","Link","eventKey","disabled","md","Header","Body","onUpload","onClick","as","animation","role","Heading","_c","$RefreshReg$"],"sources":["/home/ashok/Mis-student-Verification-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Container, Row, Col, Card, Nav, Alert, Spinner } from 'react-bootstrap';\nimport CsvUploader from './components/CsvUploader';\nimport JobDescriptionUploader from './components/JobDescriptionUploader';\nimport ProcessingStatus from './components/ProcessingStatus';\n// Removed unused import: ResultsDisplay\nimport InterviewPrep from './components/InterviewPrep';\nimport GdPrep from './components/GdPrep';\n// Removed unused import: uploadFiles\n\nfunction App() {\n  const [csvData, setCsvData] = useState(null);\n  const [jobDescFile, setJobDescFile] = useState(null);\n  // Using a default value for selectedRoles since we're not changing it\n  const [selectedRoles] = useState([]);\n  // Using a default value for analysisResults since we're not changing it\n  const [analysisResults] = useState(null);\n  const [activeTab, setActiveTab] = useState('main');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingError, setProcessingError] = useState(null);\n  const [processingData, setProcessingData] = useState(null);\n  \n  // Listen for custom tab switch events\n  useEffect(() => {\n    const handleTabSwitch = (event) => {\n      if (event.detail && analysisResults) {\n        setActiveTab(event.detail);\n      }\n    };\n    \n    window.addEventListener('switchTab', handleTabSwitch);\n    \n    // Log the current hostname and port for debugging\n    console.log('App running at:', window.location.hostname, window.location.port);\n    \n    return () => {\n      window.removeEventListener('switchTab', handleTabSwitch);\n    };\n  }, [analysisResults]);\n  \n  // Simulate polling for processing status\n  useEffect(() => {\n    let timer;\n    \n    if (processingData && processingData.status === 'processing' && csvData && csvData.data) {\n      timer = setInterval(() => {\n        // In a real application, this would call an API to get the current status\n        // For now, we'll simulate progress updates\n        setProcessingData(prev => {\n          if (!prev) return null;\n          \n          const newProcessed = Math.min(prev.processedStudents + 1, prev.totalStudents);\n          const isCompleted = newProcessed === prev.totalStudents;\n          \n          if (isCompleted) {\n            clearInterval(timer);\n            \n            // Use actual student data from the CSV file\n            const results = csvData.data.map((student, i) => {\n              // Get student name from CSV or use a fallback\n              const name = student.Name || \n                          student.name || \n                          student[\"full name of the student\"] || \n                          student[\"Full Name\"] || \n                          student[\"Student Name\"] || \n                          `Unknown Student ${i + 1}`;\n              \n              // Get student ID/Roll Number from CSV or generate one\n              const rollNumber = student.Roll_Number || \n                                student.RollNumber || \n                                student.ID || \n                                student.StudentID || \n                                `S${1000 + i}`;\n              \n              // Simulate processing status and email sending\n              const status = Math.random() > 0.2 ? 'Success' : (Math.random() > 0.5 ? 'Partial Success' : 'Failure');\n              const emailSent = Math.random() > 0.3;\n              \n              return {\n                name,\n                rollNumber,\n                status,\n                emailSent\n              };\n            });\n            \n            return {\n              ...prev,\n              status: 'completed',\n              processedStudents: newProcessed,\n              results\n            };\n          }\n          \n          return {\n            ...prev,\n            processedStudents: newProcessed\n          };\n        });\n      }, 1000);\n    }\n    \n    return () => {\n      if (timer) clearInterval(timer);\n    };\n  }, [processingData, csvData]);\n  \n  const handleCsvUpload = (data) => {\n    setCsvData(data);\n  };\n  \n  const handleJobDescUpload = (file) => {\n    setJobDescFile(file);\n  };\n  \n  const handleProcessFiles = async () => {\n    if (!csvData || !jobDescFile) {\n      alert('Please upload both a CSV file and a job description file');\n      return;\n    }\n    \n    setIsProcessing(true);\n    setProcessingError(null);\n    \n    try {\n      // In a real application, this would call the backend API\n      // For now, we'll simulate a response\n      \n      // Simulate API call\n      // const response = await uploadFiles(csvData, jobDescFile);\n      \n      // Ensure we have valid data\n      const totalStudents = csvData.data && Array.isArray(csvData.data) ? csvData.data.length : 0;\n      \n      if (totalStudents === 0) {\n        throw new Error('No student data found in the CSV file');\n      }\n      \n      console.log('Processing', totalStudents, 'students');\n      \n      setProcessingData({\n        status: 'processing',\n        totalStudents: totalStudents,\n        processedStudents: 0,\n        jobDescriptionLength: jobDescFile.size,\n        results: []\n      });\n      \n    } catch (error) {\n      console.error('Error processing files:', error);\n      setProcessingError(error.message || 'Failed to process files. Please try again.');\n      setProcessingData(null);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  \n  return (\n    <div className=\"App\">\n      <Container fluid className=\"p-4\">\n        <Row className=\"mb-4\">\n          <Col>\n            <h1 className=\"text-center\">🎓 Student MIS Verification + Document Generation System</h1>\n          </Col>\n        </Row>\n        \n        <Nav variant=\"tabs\" className=\"mb-4\" activeKey={activeTab} onSelect={(k) => setActiveTab(k)}>\n          <Nav.Item>\n            <Nav.Link eventKey=\"main\">File Processing</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"interview\" disabled={!analysisResults}>Interview Preparation</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"gd\" disabled={!analysisResults}>GD Preparation</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        \n        {activeTab === 'main' && (\n          <>\n            <Row className=\"mb-4\">\n              <Col md={6}>\n                <Card className=\"h-100\">\n                  <Card.Header>Student Profiles CSV Upload</Card.Header>\n                  <Card.Body>\n                    <CsvUploader onUpload={handleCsvUpload} />\n                  </Card.Body>\n                </Card>\n              </Col>\n              <Col md={6}>\n                <Card className=\"h-100\">\n                  <Card.Header>Job Description Upload</Card.Header>\n                  <Card.Body>\n                    <JobDescriptionUploader onUpload={handleJobDescUpload} />\n                    <div className=\"d-grid gap-2 mt-4\">\n                      <button \n                        className=\"btn btn-primary btn-lg\" \n                        onClick={handleProcessFiles}\n                        disabled={!csvData || !jobDescFile || isProcessing}\n                      >\n                        {isProcessing ? (\n                          <>\n                            <Spinner\n                              as=\"span\"\n                              animation=\"border\"\n                              size=\"sm\"\n                              role=\"status\"\n                              aria-hidden=\"true\"\n                              className=\"me-2\"\n                            />\n                            Processing...\n                          </>\n                        ) : (\n                          'Process Files'\n                        )}\n                      </button>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n            \n            {processingError && (\n              <Alert variant=\"danger\" className=\"mb-4\">\n                <Alert.Heading>Processing Error</Alert.Heading>\n                <p>{processingError}</p>\n              </Alert>\n            )}\n            \n            {processingData && <ProcessingStatus processingData={processingData} />}\n          </>\n        )}\n        \n        {activeTab === 'interview' && <InterviewPrep results={analysisResults} />}\n        {activeTab === 'gd' && <GdPrep results={analysisResults} selectedRoles={selectedRoles} />}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}